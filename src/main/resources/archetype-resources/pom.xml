<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <packaging>jar</packaging>

  <name>${artifactId}</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>

    <!--
    Note that the Fabric Runtime provides several commonly used Java libraries,
    so you need not bother with trying to bundle them into your project.

    One of the libraries provided at runtime is the middleware-api, which is a
    mandatory dependency in order to develop custom java services, pre-processors
    and post-processors for the Fabric runtime.

    Other libraries provided, such as Apache Commons or Gson are optional.

    To find a full list of the libraries provided by your Fabric runtime, browse to:
    https://[env name].konycloud.com/admin/console/download/downloads.html

    For Q&A go to the Temenos Quantum developer forum at https://basecamp.temenos.com
    -->

    <!-- https://mvnrepository.com/artifact/com.kony.middleware/middleware-api -->
    <dependency>
      <groupId>com.kony.middleware</groupId>
      <artifactId>middleware-api</artifactId>
      <version>[8.4.3.3,)</version>
      <scope>provided</scope>
    </dependency>

    <!--Provided by the Fabric runtimes from 8.4.3 onward-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>[3.8.1,)</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>[2.6.2,)</version>
      <scope>provided</scope>
    </dependency>

    <!--
    We recommend TestNG as a unit testing framework, but you will also need Mockito
    in order to mock some of the input parameters that your services, pre-processors
    and post-processors will get from the Fabric environment at runtime.
    -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.3.3</version>
      <scope>test</scope>
    </dependency>

    <!--Testing, so we can mock com.konylabs.middleware.controller.DataControllerRequest-->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>[4.5.12,)</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>[2.8.2,)</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>[2.8.2,)</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <!--
  From here on, the contents of this pom were generated by the Maven archetype generation process.
  -->
  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
